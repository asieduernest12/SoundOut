version: '3.8'

services:
  # Frontend Angular application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: reading-game-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
    networks:
      - app_network

  # Database service
  db:
    image: postgres:15-alpine
    container_name: reading-game-db
    restart: unless-stopped
    environment:
      POSTGRES_DB: reading_game
      POSTGRES_USER: app_user
      POSTGRES_PASSWORD_FILE: /run/secrets/db_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    networks:
      - app_network
    secrets:
      - db_password

  # Caddy reverse proxy
  caddy:
    image: caddy:2-alpine
    container_name: reading-game-caddy
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - app_network
    depends_on:
      - frontend

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  caddy_data:
  caddy_config:

secrets:
  db_password:
    file: ./secrets/db_password.txt